# - *- coding: utf- 8 - *-
from aiogram.dispatcher import FSMContext
from aiogram.types import Message

from tgbot.data.config import BOT_VERSION, PATH_LOGS, PATH_DATABASE
from tgbot.data.loader import dp
from tgbot.keyboards.reply_all import payments_qiwi, settings_frep, functions_frep, items_frep, promo—Åods_frep, payments_select,payments_yoomoney, admin_back, menu_frep, payments_payok
from tgbot.utils.const_functions import get_date
from tgbot.utils.misc.bot_filters import IsAdmin
from tgbot.utils.misc_functions import get_statisctics, ded
from tgbot.services.json_logic import get_texts, update_texts


#–ü—Ä–æ–º–æ–∫–æ–¥—ã
@dp.message_handler(IsAdmin(), text="‚ô£Ô∏è –ü—Ä–æ–º–æ–∫–æ–¥—ã", state="*")
async def admin_promokod(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏.</b>", reply_markup=promo—Åods_frep())


@dp.message_handler(IsAdmin(), text="ü•ùQIWI", state="*")
async def admin_qiwi(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã.</b>", reply_markup=payments_qiwi())

@dp.message_handler(IsAdmin(), text="üíµYooMoney", state="*")
async def admin_yoomoney(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã.</b>", reply_markup=payments_yoomoney())


@dp.message_handler(IsAdmin(), text="üü†Payok", state="*")
async def admin_payok(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã.</b>", reply_markup=payments_payok())

# –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
@dp.message_handler(IsAdmin(), text="üîë –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", state="*")
async def admin_payment(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É</b>", reply_markup=payments_select())


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
@dp.message_handler(IsAdmin(), text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", state="*")
async def admin_settings(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>‚öô –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.</b>", reply_markup=settings_frep())


# –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
@dp.message_handler(IsAdmin(), text="üîÜ –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏", state="*")
async def admin_functions(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üîÜ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.</b>", reply_markup=functions_frep(message.from_user.id))


# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏
@dp.message_handler(IsAdmin(), text="üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", state="*")
async def admin_products(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üéÅ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤.</b>", reply_markup=items_frep())


# C—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
@dp.message_handler(IsAdmin(), text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", state="*")
async def admin_statistics(message: Message, state: FSMContext):
    await state.finish()

    await message.answer(get_statisctics())


# –ü–æ–ª—É—á–µ–Ω–∏–µ –ë–î
@dp.message_handler(IsAdmin(), commands=['db', 'database'], state="*")
async def admin_database(message: Message, state: FSMContext):
    await state.finish()

    with open(PATH_DATABASE, "rb") as document:
        await message.answer_document(document,
                                      caption=f"<b>üì¶ BACKUP\n"
                                              f"üï∞ <code>{get_date()}</code></b>")


# –ü–æ–ª—É—á–µ–Ω–∏–µ –õ–æ–≥–æ–≤
@dp.message_handler(IsAdmin(), commands=['log', 'logs'], state="*")
async def admin_log(message: Message, state: FSMContext):
    await state.finish()

    with open(PATH_LOGS, "rb") as document:
        await message.answer_document(document,
                                      caption=f"<b>üñ® LOGS\n"
                                              f"üï∞ <code>{get_date()}</code></b>")


# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞
@dp.message_handler(commands=['version', 'log'], state="*")
async def admin_version(message: Message, state: FSMContext):
    await state.finish()

    await message.answer(f"<b>‚ùá –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞: <code>{BOT_VERSION}</code></b>")


#–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç FAQ
@dp.message_handler(IsAdmin(), text="–ò–∑–º–µ–Ω–∏—Ç—å FAQ", state="*")
async def admin_edit_text(message: Message, state: FSMContext):
    await state.finish()
    message_text = get_texts("faq")
    await state.set_state("change_faq_start")
    await message.answer(ded(f"""
    <b>–ü—Ä–æ—à–ª—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è <code>FAQ</code></b>:
    ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    <i>{message_text}</i>
    ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥</b>
    """), reply_markup = admin_back())


@dp.message_handler(IsAdmin(), state="change_faq_start")
async def admin_edit_text_final(message: Message, state: FSMContext):
    await state.finish()
    if message.text == "‚¨Ö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await message.answer("<b>–£—Å–ø–µ—à–Ω–æ</b>üëç", reply_markup = menu_frep(message.from_user.id))
    else:
        update_texts("faq", message.text)
        await message.answer("<b>–£—Å–ø–µ—à–Ω–æ</b>üëç", reply_markup = menu_frep(message.from_user.id))