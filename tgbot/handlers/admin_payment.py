# - *- coding: utf- 8 - *-
import asyncio

from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.utils.markdown import hlink

from tgbot.data.loader import dp, bot
from tgbot.keyboards.inline_admin import payment_choice_finl
from tgbot.services.api_qiwi import QiwiAPI
from tgbot.services.yoomoney_api import get_token, url_for_token, check_yoomoney, get_balance
from tgbot.services.api_sqlite import update_paymentx, get_paymentx
from tgbot.services.sqlite_logic import update_pay_form, update_pay_form_paymanual, add_info_payok, get_data_payok, update_pay_form_payok

from tgbot.utils.misc.bot_filters import IsAdmin
from tgbot.keyboards.reply_all import payments_yoomoney,payments_paymanual, payments_payok
from tgbot.keyboards.inline_admin import add_payok
from tgbot.utils.const_functions import ded

from payok import payok_api

import asyncio, socket, urllib.request

###################################################################################
############################# –í–´–ë–û–† –°–ü–û–°–û–ë–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ############################
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.message_handler(IsAdmin(), text="üñ≤ –°–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", state="*")
async def payment_systems(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>", reply_markup=payment_choice_finl())


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="change_payment:")
async def payment_systems_edit(call: CallbackQuery):
    way_pay = call.data.split(":")[1]
    way_status = call.data.split(":")[2]

    get_payment = get_paymentx()

    if get_payment['qiwi_login'] != "None" and get_payment['qiwi_token'] != "None" or way_status == "False":
        if way_pay == "Form":
            if get_payment['qiwi_secret'] != "None" or way_status == "False":
                update_paymentx(way_form=way_status)
            else:
                await call.answer(
                    "‚ùó –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ò–∑–º–µ–Ω–∏—Ç–µ –∫–∏–≤–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ",
                    True)
                return
        elif way_pay == "Number":
            update_paymentx(way_number=way_status)
        elif way_pay == "Nickname":
            status, response = await (await QiwiAPI(call)).get_nickname()

            if status:
                update_paymentx(way_nickname=way_status, qiwi_nickname=response)
            else:
                await call.answer(response, True)
                return
    else:
        await call.answer("‚ùó –î–æ–±–∞–≤—å—Ç–µ –∫–∏–≤–∏ –∫–æ—à–µ–ª—ë–∫ –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –°–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", True)
        return

    await call.message.edit_text("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>", reply_markup=payment_choice_finl())


###################################################################################
####################################### QIWI ######################################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ QIWI –∫–æ—à–µ–ª—å–∫–∞
@dp.message_handler(IsAdmin(), text="ü•ù –ò–∑–º–µ–Ω–∏—Ç—å QIWI üñç", state="*")
async def payment_qiwi_edit(message: Message, state: FSMContext):
    await state.finish()

    await state.set_state("here_qiwi_login")
    await message.answer("<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç</b>")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ QIWI
@dp.message_handler(IsAdmin(), text="ü•ù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å QIWI ‚ôª", state="*")
async def payment_qiwi_check(message: Message, state: FSMContext):
    await state.finish()

    await (await QiwiAPI(message, check_pass=True)).pre_checker()


# –ë–∞–ª–∞–Ω—Å QIWI
@dp.message_handler(IsAdmin(), text="ü•ù –ë–∞–ª–∞–Ω—Å QIWI üëÅ", state="*")
async def payment_qiwi_balance(message: Message, state: FSMContext):
    await state.finish()

    await (await QiwiAPI(message)).get_balance()


######################################## –ü–†–ò–ù–Ø–¢–ò–ï QIWI ########################################
# –ü—Ä–∏–Ω—è—Ç–∏–µ –ª–æ–≥–∏–Ω–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdmin(), state="here_qiwi_login")
async def payment_qiwi_edit_login(message: Message, state: FSMContext):
    if message.text.startswith("+"):
        await state.update_data(here_qiwi_login=message.text)

        await state.set_state("here_qiwi_token")
        await message.answer(
            "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>—Ç–æ–∫–µ–Ω API</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç</b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://qiwi.com/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –≥–∞–ª–æ—á–∫–∏.",
            disable_web_page_preview=True
        )
    else:
        await message.answer("<b>‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + <code>(+7..., +380...)</code></b>\n"
                             "ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> QIWI –∫–æ—à–µ–ª—å–∫–∞ üñç")


# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdmin(), state="here_qiwi_token")
async def payment_qiwi_edit_token(message: Message, state: FSMContext):
    await state.update_data(here_qiwi_token=message.text)

    await state.set_state("here_qiwi_secret")
    await message.answer(
        "<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á üñç</code></b>\n"
        "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://qiwi.com/p2p-admin/transfers/api'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
        "‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ –§–æ—Ä–º–µ, –æ—Ç–ø—Ä–∞–≤–∏–≤: <code>0</code>",
        disable_web_page_preview=True
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è QIWI
@dp.message_handler(IsAdmin(), state="here_qiwi_secret")
async def payment_qiwi_edit_secret(message: Message, state: FSMContext):
    async with state.proxy() as data:
        qiwi_login = data['here_qiwi_login']
        qiwi_token = data['here_qiwi_token']

        if message.text == "0": qiwi_secret = "None"
        if message.text != "0": qiwi_secret = message.text

    await state.finish()

    cache_message = await message.answer("<b>ü•ù –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö QIWI –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")
    await asyncio.sleep(0.5)

    await (await QiwiAPI(cache_message, qiwi_login, qiwi_token, qiwi_secret, True)).pre_checker()

###################################################################################
####################################### YooMoney ######################################

@dp.message_handler(IsAdmin(), text="ü•ù –ò–∑–º–µ–Ω–∏—Ç—å Yoomoney", state="*")
async def payment_yoomoney_edit(message: Message, state: FSMContext):
    await state.finish()

    await state.set_state("here_yoomoney_login")
    await message.answer("<b>ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> YooMoney –∫–æ—à–µ–ª—å–∫–∞ üñç</b>")

######################################## –ü–†–ò–ù–Ø–¢–ò–ï YooMoney ########################################
# –ü—Ä–∏–Ω—è—Ç–∏–µ –ª–æ–≥–∏–Ω–∞ –¥–ª—è Yoomoney
@dp.message_handler(IsAdmin(), state="here_yoomoney_login")
async def payment_yoomoney_edit_login(message: Message, state: FSMContext):
    if message.text.startswith("+"):
        invite_url = await bot.get_me()
        await state.update_data(here_yoomoney_login=message.text)
        await state.update_data(here_yoomoney_redirect_url= f"https://t.me/{invite_url.username}" )


        await state.set_state("here_yoomoney_client")
        await message.answer(
            "<b>üíµ –í–≤–µ–¥–∏—Ç–µ <code>cliend ID</code> Yoomoney –∫–æ—à–µ–ª—å–∫–∞</b>\n"
            "‚ùï –ü–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ —Ç—É—Ç üëâ <a href='https://yoomoney.ru/myservices/new'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
            f"üîó –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Å—ã–ª–æ–∫ —Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ  üëâ <code>https://t.me/{invite_url.username}</code>",
            disable_web_page_preview=True

        )
    else:
        await message.answer("<b>‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + <code>(+7..., +380...)</code></b>\n"
                             "ü•ù –í–≤–µ–¥–∏—Ç–µ <code>–Ω–æ–º–µ—Ä (—á–µ—Ä–µ–∑ +7, +380)</code> YooMoney –∫–æ—à–µ–ª—å–∫–∞ üñç")

# –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Yoomoney
@dp.message_handler(IsAdmin(), state="here_yoomoney_client")
async def payment_yoomoney_edit_token(message: Message, state: FSMContext):
    invite_url = await bot.get_me()
    urlToken = url_for_token(message.text, f"https://t.me/{invite_url.username}" )
    if urlToken == False:
        await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ ‚ùå")
    else:
        await state.update_data(here_yoomoney_client_id=message.text)
        await state.set_state("here_yoomoney_token")
        await message.answer(
            "<b>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
            "–ó–∞—Ç–µ–º –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ</b>\n"
            f"‚ùï –°—Å—ã–ª–∫–∞ —Ç—É—Ç üëâ <a href='{urlToken}'><b>–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è</b></a>\n"
            "‚ùï –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —ç—Ç–∞–ø –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ",
            disable_web_page_preview=True)


@dp.message_handler(IsAdmin(), state="here_yoomoney_token")
async def payment_yoomoney_get_token(message: Message, state: FSMContext):
    async with state.proxy() as data:
        client_id = data['here_yoomoney_client_id']
        redirect_url = data['here_yoomoney_redirect_url']

    token = get_token(message.text, client_id, redirect_url)
    #–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫egfk
    if token == "Empty token":
        await message.answer("<b>–ù–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω. üò•\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!</b>")
    elif token == "invalid_request":
        await message.answer("<b>–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É. üò•\n""–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!</b>")
    elif token == "unauthorized_client":
        await message.answer("<b>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω <code>client_id</code> üò•\n""–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!</b>")
    else:
        await message.answer(f"<b>üíµ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö Yooumoney –¥–∞–Ω–Ω—ã—Ö... üîÑ</b>")
        message_text = check_yoomoney(token, client_id)
        await asyncio.sleep(2)
        await message.answer(message_text)
        await state.finish()

@dp.message_handler(IsAdmin(), text="ü•ù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Yoomoney", state="*")
async def payment_yoomoney_edit(message: Message, state: FSMContext):
    message_text = check_yoomoney(None, None)
    await message.answer(message_text)

@dp.message_handler(IsAdmin(), text="ü•ù –ë–∞–ª–∞–Ω—Å YooMoney üëÅ", state="*")
async def payment_yoomoney_edit(message: Message, state: FSMContext):
    message_text = get_balance()
    await message.answer(message_text)


@dp.message_handler(IsAdmin(), text = ['‚úÖ –í–∫–ª—é—á–∏—Ç—å Yoomoney', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å Yoomoney'], state="*")
async def payment_yoomoney_off_on(message: Message, state: FSMContext):
    if message.text == '‚úÖ –í–∫–ª—é—á–∏—Ç—å Yoomoney':
        update_pay_form('True')
    else:
        update_pay_form('False')
    await message.answer("–£—Å–ø–µ—à–Ω–æ üëç", reply_markup = payments_yoomoney())

#paymanual

@dp.message_handler(IsAdmin(), text="üíµ –ü–µ—Ä–µ–≤–æ–¥–æ–º üíµ", state="*")
async def payment_paymanual_edit(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>–í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É?üñç</b>", reply_markup=payments_paymanual())


@dp.message_handler(IsAdmin(), text = ['‚úÖ –í–∫–ª—é—á–∏—Ç—å', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å'], state = '*')
async def payment_paymanual_final(message: Message, state: FSMContext):
    if message.text == '‚úÖ –í–∫–ª—é—á–∏—Ç—å':
        update_pay_form_paymanual('True')
    else:
        update_pay_form_paymanual('False')
    await message.answer("–£—Å–ø–µ—à–Ω–æ üëç", reply_markup=payments_paymanual())

#####################################################
####################PAYOK############################

####################–î–û–ë–ê–í–õ–ï–ù–ò–ï #######################
@dp.message_handler(IsAdmin(), text="üü† –ò–∑–º–µ–Ω–∏—Ç—å Payok", state="*")
async def payok_edit(message: Message, state: FSMContext):
    await state.finish()


    await state.set_state("here_payok_api_key")
    await message.answer("<b>üü† –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ <code>API –∫–ª—é—á</code> üñç</b>")

@dp.message_handler(IsAdmin(), state="here_payok_api_key")
async def here_payok_api_key(message: Message, state: FSMContext):

    await state.update_data(api_key_payok = message.text)
    await state.set_state("here_payok_api_id")
    await message.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ!\n\n<b>üü† –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ <code>API ID</code> üñç</b>")


@dp.message_handler(IsAdmin(), state="here_payok_api_id")
async def here_payok_api_id(message: Message, state: FSMContext):
    await state.update_data(api_id_payok = message.text)
    bot_info = await bot.get_me()
    invite_url = f"https://t.me/{bot_info.username}"
    await state.set_state("here_payok_secret_key")
    await message.answer(f"<i>–¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω, –≤ –∫–∞—á–µ—Å—Ç–≤–µ URL –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ ‚û°Ô∏è <code>{invite_url}</code></i>!\n\n<b>üü† –ò –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞ <code>Secret Key</code> –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞ üñç</b>")

@dp.message_handler(IsAdmin(), state="here_payok_secret_key")
async def here_payok_secret_key(message: Message, state: FSMContext):
    await state.update_data(secret_key_payok = message.text)
    bot_info = await bot.get_me()
    invite_url = f"https://t.me/{bot_info.username}"
    await state.set_state("here_payok_api")
    await message.answer(f"<b>üü† –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –í–≤–µ–¥–∏  —Å—é–¥–∞ <code>ID –º–∞–≥–∞–∑–∏–Ω–∞</code> –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞ üñç</b>")

    @dp.message_handler(IsAdmin(), state="here_payok_api")
    async def here_payok_secret_key(message: Message, state: FSMContext):
        await state.update_data(shop_id_payok=message.text)
        await state.set_state("paypk_finish")
        ip_adress = str(urllib.request.urlopen('https://ident.me').read().decode('utf8'))

        await message.answer(f"<b>üü† –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥, –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∞–π–ø–∏ <code>{ip_adress}</code> –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö IP üñç</b>", reply_markup=add_payok())


@dp.callback_query_handler(IsAdmin(), text="add_payok", state="paypk_finish")
async def payok_finish(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        api_key = data['api_key_payok']
        api_id = data['api_id_payok']
        secret_key = data['secret_key_payok']
        shop_id = data['shop_id_payok']

    await call.message.answer(f"<b>üü† –û—Ç–ª–∏—á–Ω–æ! –ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É</b>")
    await asyncio.sleep(1)
    await call.message.delete()


    try:
        info = payok_api.getBalance(api_id, api_key)
        add_info_payok(api_key, api_id, secret_key, shop_id)
        await call.message.answer(ded(f"""
        <b>PAYOK —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!</b>
        
        –í–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <code>{info['balance']}‚ÇΩ</code>"""), reply_markup=payments_payok())
    except Exception as i:
        print(i)
        await call.message.answer("<b>–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É</b>")


@dp.message_handler(IsAdmin(), text="üü† –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Payok", state="*")
async def check_payok(message: Message, state: FSMContext):
    info_payok = get_data_payok()
    balance = payok_api.getBalance(info_payok[1], info_payok[0])

    balance = balance['balance']
    await message.answer(ded(f"""
    <code>PAYOK –ü–û–î–ö–õ–Æ–ß–ï–ù ‚úÖ</code>\n
    <b>API_ID: <code>{info_payok[1]}</code>
    SECRET_KEY: <code>{info_payok[2]}</code>
    SHOP_ID: <code>{info_payok[3]}</code>
    –ë–∞–ª–∞–Ω—Å: <code>{balance}</code>
    –°—Ç–∞—Ç—É—Å: <code>–ü–æ–¥–∫–ª—é—á–µ–Ω‚úÖ</code></b>"""))

@dp.message_handler(IsAdmin(), text="üü† –ë–∞–ª–∞–Ω—Å Payok üëÅ", state="*")
async def balance_payok(message: Message, state: FSMContext):
    info_payok = get_data_payok()
    balance = payok_api.getBalance(info_payok[1], info_payok[0])

    balance = balance['balance']
    await message.answer(f"–ë–∞–ª–∞–Ω—Å: <code>{balance}</code>")


@dp.message_handler(IsAdmin(), text = ['‚úÖ –í–∫–ª—é—á–∏—Ç—å Payok', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å Payok'], state="*")
async def payment_payok_off_on(message: Message, state: FSMContext):
    if message.text == '‚úÖ –í–∫–ª—é—á–∏—Ç—å Payok':
        update_pay_form_payok('True')
    else:
        update_pay_form_payok('False')
    await message.answer("–£—Å–ø–µ—à–Ω–æ üëç", reply_markup = payments_payok())
